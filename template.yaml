AWSTemplateFormatVersion: 2010-09-09

Description: Launch AWS AppConfig resources for the sample Python AWS AppConfig helper example code

Transform:
- AWS::Serverless-2016-10-31

Parameters:
  IamRoleArnForLambda1:
    Description: The ARN for IAM role for Lambda function.
    Type: String
    Default: 'arn:aws:iam::[aws_account]:role/poc-stack-iam-roles-LambdaExecutionRole1-AWR3DMUUFJGM'
  AWSAppConfigExtensionARN:
    Description: The ARN of the AWS AppConfig Lambda Extension.
    Type: String
    Default: 'arn:aws:lambda:us-west-2:359756378197:layer:AWS-AppConfig-Extension-Arm64:16'

Conditions:
  CondAddAppConfigLambdaLayer:
    !Not [!Equals [!Ref AWSAppConfigExtensionARN, '']]

Resources:
  Application:
    Type: AWS::AppConfig::Application
    Properties:
      Name: DemoApp
      Description: AppConfig helper demo application

  Environment:
    Type: AWS::AppConfig::Environment
    Properties:
      ApplicationId: !Ref Application
      Name: prod
      Description: AppConfig helper demo environment

  Profile:
    Type: AWS::AppConfig::ConfigurationProfile
    Properties:
      LocationUri: hosted
      ApplicationId: !Ref Application
      Name: main
      Description: AppConfig helper demo profile

  ConfigVersion:
    Type: AWS::AppConfig::HostedConfigurationVersion
    Properties:
      ConfigurationProfileId: !Ref Profile
      ContentType: application/json
      Content: |
        {
          "transform_reverse": true,
          "transform_allcaps": false
        }
      ApplicationId: !Ref Application

  DeploymentStrategy:
    Type: AWS::AppConfig::DeploymentStrategy
    Properties:
      ReplicateTo: NONE
      DeploymentDurationInMinutes: 0
      GrowthFactor: 100
      Name: AllAtOnceNoBake
      FinalBakeTimeInMinutes: 0

  Deployment:
    Type: AWS::AppConfig::Deployment
    Properties:
      DeploymentStrategyId: !Ref DeploymentStrategy
      ConfigurationProfileId: !Ref Profile
      EnvironmentId: !Ref Environment
      ConfigurationVersion: !Ref ConfigVersion
      ApplicationId: !Ref Application

  # Create the API Gateway for Lambda functions
  ApiGatewayForRemoteConfigAPIs:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      Auth:
        UsagePlan:
          CreateUsagePlan: SHARED
          Throttle:
            BurstLimit: 50
            RateLimit: 10
        ApiKeyRequired: true # sets for all methods

  # Create Lambda functions - added by JM
  ## Lambda Function for retrieving AppConfig configurations
  RemoteConfigFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description: Returns configurations from AppConfig
      CodeUri: src/
      Handler: config.lambda_handler
      Runtime: python3.9
      Architectures:
        - arm64
      Timeout: 3
      MemorySize: 128
      Policies:
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - appconfig:GetLatestConfiguration
                - appconfig:StartConfigurationSession
              Resource:
                - 'arn:aws:appconfig:*:*:application/*'
      # Role: !Ref IamRoleArnForLambda1
      Tracing: Active
      Layers: #!If [CondAddAppConfigLambdaLayer, [!Ref AWSAppConfigExtensionARN], 'AWS::NoValuee']
        - 'arn:aws:lambda:ap-southeast-1:421114256042:layer:AWS-AppConfig-Extension-Arm64:16'
      Events:
        Root:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGatewayForRemoteConfigAPIs
            Path: /remote-config/{app}/{env}/{config_profile_names}
            Method: GET
            Auth:
              ApiKeyRequired: true

  ## Lambda Function for retrieving AppConfig configurations
  ExtensionTestFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description: Returns configurations from AppConfig
      CodeUri: src/
      Handler: test_extension.lambda_handler
      Runtime: python3.9
      Architectures:
        - arm64
      Timeout: 3
      MemorySize: 128
      # Layers: !If [CondAddAppConfigLambdaLayer, [!Ref AWSAppConfigExtensionARN], 'AWS::NoValuee']
      Policies:
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - appconfig:GetLatestConfiguration
                - appconfig:StartConfigurationSession
              Resource:
                - 'arn:aws:appconfig:*:*:application/*'
      Tracing: Active